{"ast":null,"code":"var _jsxFileName = \"/Users/spuri/projects/priv-analysis/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { analyzePrivacyPolicy } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [policyText, setPolicyText] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Reset error state\n    try {\n      const analysisResult = await analyzePrivacyPolicy(policyText);\n      setResult(analysisResult);\n    } catch (error) {\n      console.error('Error analyzing privacy policy:', error);\n      setError('Failed to analyze privacy policy');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Privacy Policy Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: policyText,\n        onChange: e => setPolicyText(e.target.value),\n        placeholder: \"Paste your privacy policy here\",\n        style: {\n          width: '100%',\n          height: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Analysis Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(result, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uEFrMEB6pPxe33yMz7z1SvYddTM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","analyzePrivacyPolicy","jsxDEV","_jsxDEV","App","_s","policyText","setPolicyText","result","setResult","error","setError","handleSubmit","e","preventDefault","analysisResult","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","style","width","height","type","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/spuri/projects/priv-analysis/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { analyzePrivacyPolicy } from './api';\n\nfunction App() {\n  const [policyText, setPolicyText] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null); // Reset error state\n    try {\n      const analysisResult = await analyzePrivacyPolicy(policyText);\n      setResult(analysisResult);\n    } catch (error) {\n      console.error('Error analyzing privacy policy:', error);\n      setError('Failed to analyze privacy policy');\n    }\n  };\n  return (\n    <div>\n      <h1>Privacy Policy Analyzer</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={policyText}\n          onChange={(e) => setPolicyText(e.target.value)}\n          placeholder=\"Paste your privacy policy here\"\n          style={{ width: '100%', height: '200px' }}\n        />\n        <button type=\"submit\">Analyze</button>\n      </form>\n      {result && (\n        <div>\n          <h2>Analysis Result:</h2>\n          <pre>{JSON.stringify(result, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChB,IAAI;MACF,MAAMI,cAAc,GAAG,MAAMd,oBAAoB,CAACK,UAAU,CAAC;MAC7DG,SAAS,CAACM,cAAc,CAAC;IAC3B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdM,OAAO,CAACN,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDC,QAAQ,CAAC,kCAAkC,CAAC;IAC9C;EACF,CAAC;EACD,oBACER,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChClB,OAAA;MAAMmB,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBAC3Bd,OAAA;QACEoB,KAAK,EAAEjB,UAAW;QAClBkB,QAAQ,EAAGX,CAAC,IAAKN,aAAa,CAACM,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAC/CG,WAAW,EAAC,gCAAgC;QAC5CC,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAQ;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFlB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACNb,MAAM,iBACLL,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBlB,OAAA;QAAAc,QAAA,EAAMc,IAAI,CAACC,SAAS,CAACxB,MAAM,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CApCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}